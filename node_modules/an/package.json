{
  "name": "an",
  "version": "0.0.8",
  "description": "Angular + NPM: Publish your AngularJS modules to npm",
  "main": "index.js",
  "scripts": {
    "demo": "browserify ./demo/app.js > ./demo/bundle.js"
  },
  "author": {
    "name": "Andrei Kashcha"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/anvaka/an"
  },
  "devDependencies": {
    "browserify": "^13.0.0"
  },
  "readme": "# Angular + npm\n\nBuild angular 1.x apps with power of npm modules.\n\n# usage\n\nTo start using `an` just replace `angular.{controller|directive|...}('name', fn)`\nwith: `module.exports = require('an').{controller|...}('name', fn)`\n\nThen in your main file where you bootstrap angular application:\n\n``` js\nvar app = angular.module('yourModule', [/* your regular deps */]);\n// flush all registered modules:\nrequire('an').flush(app);\n```\n\n## Demo\n\n``` js\n// controller.js\nmodule.exports = require('an').controller('AppCtrl', function($scope) {\n  $scope.message = 'Hello World';\n});\n\n// app.js\nrequire('./controller.js'); // just make sure the controller is registered\n\nvar app = angular.module('myApp', []);\n// flush controller into app:\nrequire('an').flush(app);\n\n// this is equivalent to:\n// app.controller('AppCtrl', function() {...});\n```\n\n``` html\n<!DOCTYPE html>\n<html ng-app='myApp'>\n<head>\n <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.5.0/angular.min.js\"></script>\n</head>\n<body ng-controller='AppCtrl'>\n    <h1>{{message}}</h1>\n    <script src='bundle.js'></script>\n</body>\n</html>\n```\n\nSee [demo folder](https://github.com/anvaka/an/tree/master/demo) for the same code.\nBrowserified output of the demo folder (`browserify ./demo/app.js > ./demo/bundle.js`)\ncan be found here: https://anvaka.github.io/an/demo\n\n# How?\n\nThe idea is simple: avoid using `angular.module` in npm package, and delay\ndirectives registration up to the point when application is bootstrapped.\n\nE.g. instead of doing:\n\n``` js\n  var myModule = angular.module(???, []);\n  myModule.directive(???, function myDirective() {/* */});\n```\n\nDo:\n\n``` js\n  require('an').directive(function myDirective() {});\n```\n\nWhen you ready to bootstrap application, collect all directives and register them in your main application module:\n\n``` js\n  require('an').flush();\n```\n\n\n# Drawbacks\n\nThis approach is still not perfect and requires certain discipline to not forget\nregister your directives via `an`. I can also see potential problems with names\ncollision, versioning (especially when `an` itself is updated).\nThis module is [really simple](https://github.com/anvaka/an/blob/master/index.js)\nat the moment, and maybe there is a better way of sharing angular directives on\nnpm.\n\nPlease let me know.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install an\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/anvaka/an/issues"
  },
  "_id": "an@0.0.8",
  "dist": {
    "shasum": "6083aef1217663c98969c88c29cdaae0f20db11b"
  },
  "_from": "an@",
  "_resolved": "https://registry.npmjs.org/an/-/an-0.0.8.tgz"
}
